==28639== Memcheck, a memory error detector
==28639== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==28639== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==28639== Command: ./rbftest
==28639== 
--28639-- Valgrind options:
--28639--    --leak-check=full
--28639--    --run-libc-freeres=no
--28639--    --leak-check=yes
--28639--    --show-leak-kinds=all
--28639--    --track-origins=yes
--28639--    -v
--28639--    --show-reachable=yes
--28639-- Contents of /proc/version:
--28639--   Linux version 3.10.0-514.10.2.el7.x86_64 (builder@kbuilder.dev.centos.org) (gcc version 4.8.5 20150623 (Red Hat 4.8.5-11) (GCC) ) #1 SMP Fri Mar 3 00:04:05 UTC 2017
--28639-- 
--28639-- Arch and hwcaps: AMD64, LittleEndian, amd64-cx16-rdtscp-sse3-avx
--28639-- Page sizes: currently 4096, max supported 4096
--28639-- Valgrind library directory: /opt/rh/devtoolset-4/root/usr/lib64/valgrind
--28639-- Reading syms from /afs/cats.ucsc.edu/users/t/jpitz/private/CS181/project2/codebase/rbf/rbftest
--28639-- Reading syms from /usr/lib64/ld-2.17.so
--28639-- Reading syms from /opt/rh/devtoolset-4/root/usr/lib64/valgrind/memcheck-amd64-linux
--28639--    object doesn't have a symbol table
--28639--    object doesn't have a dynamic symbol table
--28639-- Scheduler: using generic scheduler lock implementation.
--28639-- Reading suppressions file: /opt/rh/devtoolset-4/root/usr/lib64/valgrind/default.supp
==28639== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-28639-by-jpitz-on-unix1.lt.ucsc.edu
==28639== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-28639-by-jpitz-on-unix1.lt.ucsc.edu
==28639== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-28639-by-jpitz-on-unix1.lt.ucsc.edu
==28639== 
==28639== TO CONTROL THIS PROCESS USING vgdb (which you probably
==28639== don't want to do, unless you know exactly what you're doing,
==28639== or are doing some strange experiment):
==28639==   /opt/rh/devtoolset-4/root/usr/lib64/valgrind/../../bin/vgdb --pid=28639 ...command...
==28639== 
==28639== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==28639==   /path/to/gdb ./rbftest
==28639== and then give GDB the following command
==28639==   target remote | /opt/rh/devtoolset-4/root/usr/lib64/valgrind/../../bin/vgdb --pid=28639
==28639== --pid is optional if only one valgrind process is running
==28639== 
--28639-- REDIR: 0x4018e90 (ld-linux-x86-64.so.2:strlen) redirected to 0x38056c41 (???)
--28639-- REDIR: 0x4018c60 (ld-linux-x86-64.so.2:index) redirected to 0x38056c5b (???)
--28639-- Reading syms from /opt/rh/devtoolset-4/root/usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--28639-- Reading syms from /opt/rh/devtoolset-4/root/usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
==28639== WARNING: new redirection conflicts with existing -- ignoring it
--28639--     old: 0x04018e90 (strlen              ) R-> (0000.0) 0x38056c41 ???
--28639--     new: 0x04018e90 (strlen              ) R-> (2007.0) 0x04c2aa90 strlen
--28639-- REDIR: 0x4018e10 (ld-linux-x86-64.so.2:strcmp) redirected to 0x4c2bbe0 (strcmp)
--28639-- REDIR: 0x4019a00 (ld-linux-x86-64.so.2:mempcpy) redirected to 0x4c2ec20 (mempcpy)
--28639-- Reading syms from /usr/lib64/libstdc++.so.6.0.19
--28639--    object doesn't have a symbol table
--28639-- Reading syms from /usr/lib64/libm-2.17.so
--28639-- Reading syms from /usr/lib64/libgcc_s-4.8.5-20150702.so.1
--28639--    object doesn't have a symbol table
--28639-- Reading syms from /usr/lib64/libc-2.17.so
--28639-- REDIR: 0x56ddec0 (libc.so.6:strcasecmp) redirected to 0x4a22713 (_vgnU_ifunc_wrapper)
--28639-- REDIR: 0x56dac40 (libc.so.6:strnlen) redirected to 0x4a22713 (_vgnU_ifunc_wrapper)
--28639-- REDIR: 0x56e0190 (libc.so.6:strncasecmp) redirected to 0x4a22713 (_vgnU_ifunc_wrapper)
--28639-- REDIR: 0x56dd6a0 (libc.so.6:memset) redirected to 0x4a22713 (_vgnU_ifunc_wrapper)
--28639-- REDIR: 0x56dd650 (libc.so.6:memcpy@GLIBC_2.2.5) redirected to 0x4a22713 (_vgnU_ifunc_wrapper)
--28639-- REDIR: 0x56dc630 (libc.so.6:__GI_strrchr) redirected to 0x4c2a450 (__GI_strrchr)
--28639-- REDIR: 0x56dab60 (libc.so.6:__GI_strlen) redirected to 0x4c2a9f0 (__GI_strlen)
--28639-- REDIR: 0x56dd0c0 (libc.so.6:__GI_memcmp) redirected to 0x4c2d4d0 (__GI_memcmp)
--28639-- REDIR: 0x56d90c0 (libc.so.6:strcmp) redirected to 0x4a22713 (_vgnU_ifunc_wrapper)
--28639-- REDIR: 0x5787570 (libc.so.6:__strcmp_sse42) redirected to 0x4c2bb90 (__strcmp_sse42)
--28639-- REDIR: 0x4e920b0 (libstdc++.so.6:operator new(unsigned long)) redirected to 0x4c2817c (operator new(unsigned long))
--28639-- REDIR: 0x56dab10 (libc.so.6:strlen) redirected to 0x4a22713 (_vgnU_ifunc_wrapper)
--28639-- REDIR: 0x57b7e60 (libc.so.6:__strlen_sse2_pminub) redirected to 0x4c2a9d0 (strlen)
--28639-- REDIR: 0x56dd870 (libc.so.6:__GI_mempcpy) redirected to 0x4c2e950 (__GI_mempcpy)
--28639-- REDIR: 0x56e2860 (libc.so.6:memcpy@@GLIBC_2.14) redirected to 0x4a22713 (_vgnU_ifunc_wrapper)
--28639-- REDIR: 0x579d220 (libc.so.6:__memcpy_ssse3_back) redirected to 0x4c2bfa0 (memcpy@@GLIBC_2.14)
--28639-- REDIR: 0x56dd080 (libc.so.6:bcmp) redirected to 0x4a22713 (_vgnU_ifunc_wrapper)
--28639-- REDIR: 0x57b2790 (libc.so.6:__memcmp_sse4_1) redirected to 0x4c2d610 (__memcmp_sse4_1)
--28639-- REDIR: 0x56d3f70 (libc.so.6:malloc) redirected to 0x4c27b5c (malloc)
--28639-- REDIR: 0x56f3540 (libc.so.6:__GI_strstr) redirected to 0x4c2eeb0 (__strstr_sse2)
--28639-- REDIR: 0x56d4370 (libc.so.6:free) redirected to 0x4c28c56 (free)
--28639-- REDIR: 0x4e90230 (libstdc++.so.6:operator delete(void*)) redirected to 0x4c29106 (operator delete(void*))
--28639-- REDIR: 0x56dd700 (libc.so.6:__GI_memset) redirected to 0x4c2de80 (memset)
--28639-- REDIR: 0x56e4150 (libc.so.6:strchrnul) redirected to 0x4c2e740 (strchrnul)
--28639-- REDIR: 0x56e28d0 (libc.so.6:__GI_memcpy) redirected to 0x4c2c580 (__GI_memcpy)
--28639-- REDIR: 0x56dcd30 (libc.so.6:memchr) redirected to 0x4c2bc80 (memchr)
--28639-- REDIR: 0x56d4960 (libc.so.6:calloc) redirected to 0x4c298df (calloc)
--28639-- REDIR: 0x57a27c0 (libc.so.6:__memmove_ssse3_back) redirected to 0x4c2bd40 (memcpy@GLIBC_2.2.5)
--28639-- REDIR: 0x4e921c0 (libstdc++.so.6:operator new[](unsigned long)) redirected to 0x4c28821 (operator new[](unsigned long))
--28639-- REDIR: 0x4e90260 (libstdc++.so.6:operator delete[](void*)) redirected to 0x4c295b6 (operator delete[](void*))
==28639== Conditional jump or move depends on uninitialised value(s)
==28639==    at 0x408794: FileHandle::readPage(unsigned int, void*) (pfm.cc:103)
==28639==    by 0x408E9C: RecordBasedFileManager::readRecord(FileHandle&, std::vector<Attribute, std::allocator<Attribute> > const&, RID const&, void*) (rbfm.cc:128)
==28639==    by 0x405B04: RBFTest_10(RecordBasedFileManager*) (rbftest.cc:745)
==28639==    by 0x406333: main (rbftest.cc:859)
==28639==  Uninitialised value was created by a stack allocation
==28639==    at 0x4052D0: RBFTest_10(RecordBasedFileManager*) (rbftest.cc:634)
==28639== 
==28639== Warning: client switching stacks?  SP change: 0xffefff290 --> 0xfeffff280
==28639==          to suppress, use: --max-stackframe=251658256 or greater
==28639== Invalid write of size 8
==28639==    at 0x409A49: RecordBasedFileManager::printRecord(std::vector<Attribute, std::allocator<Attribute> > const&, void const*) (rbfm.cc:440)
==28639==  Address 0xfeffff278 is on thread 1's stack
==28639== 
==28639== 
==28639== Process terminating with default action of signal 11 (SIGSEGV)
==28639==  Access not within mapped region at address 0xFEFFFF278
==28639==    at 0x409A49: RecordBasedFileManager::printRecord(std::vector<Attribute, std::allocator<Attribute> > const&, void const*) (rbfm.cc:440)
==28639==  If you believe this happened as a result of a stack
==28639==  overflow in your program's main thread (unlikely but
==28639==  possible), you can try to increase the size of the
==28639==  main thread stack using the --main-stacksize= flag.
==28639==  The main thread stack size used in this run was 8388608.
==28639== 
==28639== HEAP SUMMARY:
==28639==     in use at exit: 53,259 bytes in 45 blocks
==28639==   total heap usage: 6,436 allocs, 6,391 frees, 25,488,601 bytes allocated
==28639== 
==28639== Searching for pointers to 45 not-freed blocks
==28639== Checked 242,800 bytes
==28639== 
==28639== 1 bytes in 1 blocks are still reachable in loss record 1 of 18
==28639==    at 0x4C28203: operator new(unsigned long) (vg_replace_malloc.c:334)
==28639==    by 0x408486: PagedFileManager::instance() (pfm.cc:8)
==28639==    by 0x406231: main (rbftest.cc:829)
==28639== 
==28639== 1 bytes in 1 blocks are still reachable in loss record 2 of 18
==28639==    at 0x4C28203: operator new(unsigned long) (vg_replace_malloc.c:334)
==28639==    by 0x408A74: RecordBasedFileManager::instance() (rbfm.cc:9)
==28639==    by 0x40623A: main (rbftest.cc:832)
==28639== 
==28639== 1 bytes in 1 blocks are definitely lost in loss record 3 of 18
==28639==    at 0x4C27BE3: malloc (vg_replace_malloc.c:299)
==28639==    by 0x404769: RBFTest_8(RecordBasedFileManager*) (rbftest.cc:487)
==28639==    by 0x4062F8: main (rbftest.cc:854)
==28639== 
==28639== 4 bytes in 1 blocks are still reachable in loss record 4 of 18
==28639==    at 0x4C27BE3: malloc (vg_replace_malloc.c:299)
==28639==    by 0x405705: RBFTest_10(RecordBasedFileManager*) (rbftest.cc:705)
==28639==    by 0x406333: main (rbftest.cc:859)
==28639== 
==28639== 4 bytes in 1 blocks are definitely lost in loss record 5 of 18
==28639==    at 0x4C27BE3: malloc (vg_replace_malloc.c:299)
==28639==    by 0x404D84: RBFTest_9(RecordBasedFileManager*, std::vector<RID, std::allocator<RID> >&, std::vector<int, std::allocator<int> >&) (rbftest.cc:573)
==28639==    by 0x406327: main (rbftest.cc:858)
==28639== 
==28639== 16 bytes in 1 blocks are still reachable in loss record 6 of 18
==28639==    at 0x4C28203: operator new(unsigned long) (vg_replace_malloc.c:334)
==28639==    by 0x407C7B: __gnu_cxx::new_allocator<Attribute>::allocate(unsigned long, void const*) (new_allocator.h:104)
==28639==    by 0x407916: std::allocator_traits<std::allocator<Attribute> >::allocate(std::allocator<Attribute>&, unsigned long) (alloc_traits.h:491)
==28639==    by 0x4072A7: std::_Vector_base<Attribute, std::allocator<Attribute> >::_M_allocate(unsigned long) (stl_vector.h:170)
==28639==    by 0x4068BB: void std::vector<Attribute, std::allocator<Attribute> >::_M_emplace_back_aux<Attribute const&>(Attribute const&) (vector.tcc:412)
==28639==    by 0x406508: std::vector<Attribute, std::allocator<Attribute> >::push_back(Attribute const&) (stl_vector.h:923)
==28639==    by 0x405FD1: RBFTest_10(RecordBasedFileManager*) (rbftest.cc:801)
==28639==    by 0x406333: main (rbftest.cc:859)
==28639== 
==28639== 30 bytes in 1 blocks are still reachable in loss record 7 of 18
==28639==    at 0x4C28203: operator new(unsigned long) (vg_replace_malloc.c:334)
==28639==    by 0x4EF0C78: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /usr/lib64/libstdc++.so.6.0.19)
==28639==    by 0x4EF2530: char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag) (in /usr/lib64/libstdc++.so.6.0.19)
==28639==    by 0x4EF2967: std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) (in /usr/lib64/libstdc++.so.6.0.19)
==28639==    by 0x405327: RBFTest_10(RecordBasedFileManager*) (rbftest.cc:643)
==28639==    by 0x406333: main (rbftest.cc:859)
==28639== 
==28639== 310 bytes in 10 blocks are still reachable in loss record 8 of 18
==28639==    at 0x4C28203: operator new(unsigned long) (vg_replace_malloc.c:334)
==28639==    by 0x4EF0C78: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /usr/lib64/libstdc++.so.6.0.19)
==28639==    by 0x4EF18BA: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /usr/lib64/libstdc++.so.6.0.19)
==28639==    by 0x4EF1963: std::string::reserve(unsigned long) (in /usr/lib64/libstdc++.so.6.0.19)
==28639==    by 0x4EF1BCE: std::string::append(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.19)
==28639==    by 0x402469: createLargeRecordDescriptor(std::vector<Attribute, std::allocator<Attribute> >&) (test_util.h:200)
==28639==    by 0x4053BC: RBFTest_10(RecordBasedFileManager*) (rbftest.cc:655)
==28639==    by 0x406333: main (rbftest.cc:859)
==28639== 
==28639== 330 bytes in 10 blocks are still reachable in loss record 9 of 18
==28639==    at 0x4C28203: operator new(unsigned long) (vg_replace_malloc.c:334)
==28639==    by 0x4EF0C78: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /usr/lib64/libstdc++.so.6.0.19)
==28639==    by 0x4EF18BA: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /usr/lib64/libstdc++.so.6.0.19)
==28639==    by 0x4EF1963: std::string::reserve(unsigned long) (in /usr/lib64/libstdc++.so.6.0.19)
==28639==    by 0x4EF1BCE: std::string::append(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.19)
==28639==    by 0x40240B: createLargeRecordDescriptor(std::vector<Attribute, std::allocator<Attribute> >&) (test_util.h:193)
==28639==    by 0x4053BC: RBFTest_10(RecordBasedFileManager*) (rbftest.cc:655)
==28639==    by 0x406333: main (rbftest.cc:859)
==28639== 
==28639== 330 bytes in 10 blocks are still reachable in loss record 10 of 18
==28639==    at 0x4C28203: operator new(unsigned long) (vg_replace_malloc.c:334)
==28639==    by 0x4EF0C78: std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&) (in /usr/lib64/libstdc++.so.6.0.19)
==28639==    by 0x4EF18BA: std::string::_Rep::_M_clone(std::allocator<char> const&, unsigned long) (in /usr/lib64/libstdc++.so.6.0.19)
==28639==    by 0x4EF1963: std::string::reserve(unsigned long) (in /usr/lib64/libstdc++.so.6.0.19)
==28639==    by 0x4EF1BCE: std::string::append(char const*, unsigned long) (in /usr/lib64/libstdc++.so.6.0.19)
==28639==    by 0x4024C7: createLargeRecordDescriptor(std::vector<Attribute, std::allocator<Attribute> >&) (test_util.h:207)
==28639==    by 0x4053BC: RBFTest_10(RecordBasedFileManager*) (rbftest.cc:655)
==28639==    by 0x406333: main (rbftest.cc:859)
==28639== 
==28639== 512 bytes in 1 blocks are still reachable in loss record 11 of 18
==28639==    at 0x4C28203: operator new(unsigned long) (vg_replace_malloc.c:334)
==28639==    by 0x407C7B: __gnu_cxx::new_allocator<Attribute>::allocate(unsigned long, void const*) (new_allocator.h:104)
==28639==    by 0x407916: std::allocator_traits<std::allocator<Attribute> >::allocate(std::allocator<Attribute>&, unsigned long) (alloc_traits.h:491)
==28639==    by 0x4072A7: std::_Vector_base<Attribute, std::allocator<Attribute> >::_M_allocate(unsigned long) (stl_vector.h:170)
==28639==    by 0x4068BB: void std::vector<Attribute, std::allocator<Attribute> >::_M_emplace_back_aux<Attribute const&>(Attribute const&) (vector.tcc:412)
==28639==    by 0x406508: std::vector<Attribute, std::allocator<Attribute> >::push_back(Attribute const&) (stl_vector.h:923)
==28639==    by 0x40248A: createLargeRecordDescriptor(std::vector<Attribute, std::allocator<Attribute> >&) (test_util.h:203)
==28639==    by 0x4053BC: RBFTest_10(RecordBasedFileManager*) (rbftest.cc:655)
==28639==    by 0x406333: main (rbftest.cc:859)
==28639== 
==28639== 568 bytes in 1 blocks are still reachable in loss record 12 of 18
==28639==    at 0x4C27BE3: malloc (vg_replace_malloc.c:299)
==28639==    by 0x56BF54C: __fopen_internal (in /usr/lib64/libc-2.17.so)
==28639==    by 0x408653: PagedFileManager::openFile(std::string const&, FileHandle&) (pfm.cc:58)
==28639==    by 0x408B51: RecordBasedFileManager::openFile(std::string const&, FileHandle&) (rbfm.cc:32)
==28639==    by 0x405359: RBFTest_10(RecordBasedFileManager*) (rbftest.cc:647)
==28639==    by 0x406333: main (rbftest.cc:859)
==28639== 
==28639== 1,000 bytes in 1 blocks are still reachable in loss record 13 of 18
==28639==    at 0x4C27BE3: malloc (vg_replace_malloc.c:299)
==28639==    by 0x40538C: RBFTest_10(RecordBasedFileManager*) (rbftest.cc:651)
==28639==    by 0x406333: main (rbftest.cc:859)
==28639== 
==28639== 1,000 bytes in 1 blocks are still reachable in loss record 14 of 18
==28639==    at 0x4C27BE3: malloc (vg_replace_malloc.c:299)
==28639==    by 0x40539A: RBFTest_10(RecordBasedFileManager*) (rbftest.cc:652)
==28639==    by 0x406333: main (rbftest.cc:859)
==28639== 
==28639== 8,192 bytes in 1 blocks are still reachable in loss record 15 of 18
==28639==    at 0x4C28203: operator new(unsigned long) (vg_replace_malloc.c:334)
==28639==    by 0x407E0B: __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) (new_allocator.h:104)
==28639==    by 0x407AB9: std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) (alloc_traits.h:491)
==28639==    by 0x407659: std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) (stl_vector.h:170)
==28639==    by 0x406D1B: void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int const&>(int const&) (vector.tcc:412)
==28639==    by 0x406626: std::vector<int, std::allocator<int> >::push_back(int const&) (stl_vector.h:923)
==28639==    by 0x404E7C: RBFTest_9(RecordBasedFileManager*, std::vector<RID, std::allocator<RID> >&, std::vector<int, std::allocator<int> >&) (rbftest.cc:588)
==28639==    by 0x406327: main (rbftest.cc:858)
==28639== 
==28639== 8,192 bytes in 1 blocks are still reachable in loss record 16 of 18
==28639==    at 0x4C28203: operator new(unsigned long) (vg_replace_malloc.c:334)
==28639==    by 0x407E0B: __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) (new_allocator.h:104)
==28639==    by 0x407AB9: std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) (alloc_traits.h:491)
==28639==    by 0x407659: std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) (stl_vector.h:170)
==28639==    by 0x406D1B: void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int const&>(int const&) (vector.tcc:412)
==28639==    by 0x406626: std::vector<int, std::allocator<int> >::push_back(int const&) (stl_vector.h:923)
==28639==    by 0x405695: RBFTest_10(RecordBasedFileManager*) (rbftest.cc:696)
==28639==    by 0x406333: main (rbftest.cc:859)
==28639== 
==28639== 16,384 bytes in 1 blocks are still reachable in loss record 17 of 18
==28639==    at 0x4C28203: operator new(unsigned long) (vg_replace_malloc.c:334)
==28639==    by 0x407D31: __gnu_cxx::new_allocator<RID>::allocate(unsigned long, void const*) (new_allocator.h:104)
==28639==    by 0x4079D9: std::allocator_traits<std::allocator<RID> >::allocate(std::allocator<RID>&, unsigned long) (alloc_traits.h:491)
==28639==    by 0x407467: std::_Vector_base<RID, std::allocator<RID> >::_M_allocate(unsigned long) (stl_vector.h:170)
==28639==    by 0x406AE9: void std::vector<RID, std::allocator<RID> >::_M_emplace_back_aux<RID const&>(RID const&) (vector.tcc:412)
==28639==    by 0x4065BA: std::vector<RID, std::allocator<RID> >::push_back(RID const&) (stl_vector.h:923)
==28639==    by 0x404E63: RBFTest_9(RecordBasedFileManager*, std::vector<RID, std::allocator<RID> >&, std::vector<int, std::allocator<int> >&) (rbftest.cc:587)
==28639==    by 0x406327: main (rbftest.cc:858)
==28639== 
==28639== 16,384 bytes in 1 blocks are still reachable in loss record 18 of 18
==28639==    at 0x4C28203: operator new(unsigned long) (vg_replace_malloc.c:334)
==28639==    by 0x407D31: __gnu_cxx::new_allocator<RID>::allocate(unsigned long, void const*) (new_allocator.h:104)
==28639==    by 0x4079D9: std::allocator_traits<std::allocator<RID> >::allocate(std::allocator<RID>&, unsigned long) (alloc_traits.h:491)
==28639==    by 0x407467: std::_Vector_base<RID, std::allocator<RID> >::_M_allocate(unsigned long) (stl_vector.h:170)
==28639==    by 0x406AE9: void std::vector<RID, std::allocator<RID> >::_M_emplace_back_aux<RID const&>(RID const&) (vector.tcc:412)
==28639==    by 0x4065BA: std::vector<RID, std::allocator<RID> >::push_back(RID const&) (stl_vector.h:923)
==28639==    by 0x40553D: RBFTest_10(RecordBasedFileManager*) (rbftest.cc:677)
==28639==    by 0x406333: main (rbftest.cc:859)
==28639== 
==28639== LEAK SUMMARY:
==28639==    definitely lost: 5 bytes in 2 blocks
==28639==    indirectly lost: 0 bytes in 0 blocks
==28639==      possibly lost: 0 bytes in 0 blocks
==28639==    still reachable: 53,254 bytes in 43 blocks
==28639==                       of which reachable via heuristic:
==28639==                         stdstring          : 1,000 bytes in 31 blocks
==28639==         suppressed: 0 bytes in 0 blocks
==28639== 
==28639== ERROR SUMMARY: 5 errors from 4 contexts (suppressed: 0 from 0)
==28639== 
==28639== 1 errors in context 1 of 4:
==28639== Invalid write of size 8
==28639==    at 0x409A49: RecordBasedFileManager::printRecord(std::vector<Attribute, std::allocator<Attribute> > const&, void const*) (rbfm.cc:440)
==28639==  Address 0xfeffff278 is on thread 1's stack
==28639== 
==28639== 
==28639== 2 errors in context 2 of 4:
==28639== Conditional jump or move depends on uninitialised value(s)
==28639==    at 0x408794: FileHandle::readPage(unsigned int, void*) (pfm.cc:103)
==28639==    by 0x408E9C: RecordBasedFileManager::readRecord(FileHandle&, std::vector<Attribute, std::allocator<Attribute> > const&, RID const&, void*) (rbfm.cc:128)
==28639==    by 0x405B04: RBFTest_10(RecordBasedFileManager*) (rbftest.cc:745)
==28639==    by 0x406333: main (rbftest.cc:859)
==28639==  Uninitialised value was created by a stack allocation
==28639==    at 0x4052D0: RBFTest_10(RecordBasedFileManager*) (rbftest.cc:634)
==28639== 
==28639== ERROR SUMMARY: 5 errors from 4 contexts (suppressed: 0 from 0)
make: *** [grind] Segmentation fault (core dumped)
